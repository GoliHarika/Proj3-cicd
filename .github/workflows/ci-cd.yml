name: CI/CD by Sync Zipped HTML and Deploy CFN from S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install zip
        run: sudo apt-get install -y zip

      - name: Zip the HTML file
        run: |
          if [ -f index.html ]; then
            zip -r index.zip index.html
          else
            echo "‚ùå No HTML files found to zip."
            exit 1
          fi

      - name: Zip Lambda files
        run: |
          if [ -f sdk-files/lambda_function.py ]; then
            zip -j lambda_function.zip sdk-files/lambda_function.py
          else
            echo "‚ùå lambda_function.py not found."
            exit 1
          fi

          if [ -f sdk-files/proj3_deployment_lambda.py ]; then
            zip -j proj3_deployment_lambda.zip sdk-files/proj3_deployment_lambda.py
          else
            echo "‚ùå proj3_deployment_lambda.py not found."
            exit 1
          fi

      - name: Upload to S3
        run: |
          aws s3 cp index.zip s3://proj3-group12-bucket-sdk/proj3/
          aws s3 cp lambda_function.zip s3://proj3-group12-bucket-sdk/proj3/
          aws s3 cp proj3_deployment_lambda.zip s3://proj3-group12-bucket-sdk/proj3/

      - name: Deploy CloudFormation Stacks
        run: |
          declare -A stacks
          stacks["group12-participation-backend"]="https://proj3-group12-bucket-sdk.s3.us-east-2.amazonaws.com/proj3/proj3.yml"
          stacks["group12-participation-frontend"]="https://proj3-group12-bucket-sdk.s3.us-east-2.amazonaws.com/proj3/proj3_frontkend.yml"
          stacks["group12-participation-amplify"]="https://proj3-group12-bucket-sdk.s3.us-east-2.amazonaws.com/proj3/proj3_amplify.yml"

          for stack in "${!stacks[@]}"; do
            echo "üöÄ Deploying CloudFormation stack: $stack"
            
            set +e
            deploy_output=$(aws cloudformation deploy \
              --stack-name "$stack" \
              --template-url "${stacks[$stack]}" \
              --capabilities CAPABILITY_NAMED_IAM 2>&1)
            exit_code=$?
            set -e

            if [ "$exit_code" -eq 0 ]; then
              echo "‚úÖ Successfully deployed stack: $stack"
            elif echo "$deploy_output" | grep -q "No changes to deploy"; then
              echo "‚ÑπÔ∏è No changes to deploy for stack: $stack"
            else
              echo "‚ùå Failed to deploy stack: $stack"
              echo "$deploy_output"
              exit "$exit_code"
            fi
          done
